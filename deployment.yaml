apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: us.gcr.io/linear-stock-388107/app-engine-tmp/app:48c27fa0833e423560458673de4e5a907c215461
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets
          volumeMounts:
            - name: app-storage
              mountPath: /app/storage
      volumes:
        - name: app-storage
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  # Add your configuration key-value pairs here
  DATABASE_URL: your-database-url
  API_KEY: your-api-key
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
type: Opaque
data:
  # Add your secret key-value pairs here (base64-encoded)
  SECRET_KEY: TXlMb3ZlUG9vbmFtCg==

---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    labels:
      app: app
    name: app
    namespace: app
  spec:
    ports:
    - name: "3000"
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: app
    type: ClusterIP
---
apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: gce
      kubernetes.io/ingress.global-static-ip-name: app-ip
    generation: 4
    name: app
    namespace: app
  spec:
    rules:
    - http:
        paths:
        - backend:
            service:
              name: app
              port:
                number: 3000
          path: /
          pathType: Prefix
