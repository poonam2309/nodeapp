name: Build and Deploy

on:
  push: 
  workflow_dispatch:
    inputs:      
      build:
        description: 'Run Job build'
        required: false
        default: true
      deploy:
        description: 'Run Job deploy'
        required: false
        default: true

env:
  PROJECT_ID: linear-stock-388107
  GCR_HOSTNAME: us.gcr.io
  GCR_REGISTRY: app-engine-tmp
  GCP_ZONE: us-central1-a
  IMAGE_NAME: aiapp
  IMAGE_TAG: ${{ github.sha }}
  INGRESS_DELETE: FALSE


jobs:
  build:
    name: Build Docker Image
    runs-on: self-hosted
    # if: ${{ github.event.inputs.build == 'true' }}
    

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true  
        
      - name: Log in to Docker Registry
        run: |
         gcloud auth activate-service-account --key-file=sa.json
         gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us.gcr.io  


      - name: Download packages
        run: |
           npm install

      - name: Build Docker Image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{env.GCR_REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .


  deploy:
    name: Deploy to GKE
    needs: build
    runs-on: self-hosted
    # if: ${{ github.event.inputs.deploy == 'true' }}

    steps:
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          
          export_default_credentials: true

      - name: New Deployment
        if: steps.check_deployment.outputs.deployment_exists == 'false'
        run: |
          gcloud run deploy jupyapp --image ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{env.GCR_REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --platform managed --region GCP_ZONE


     # - name: Update Deployment
     #   if: steps.check_deployment.outputs.deployment_exists == 'true'
     #  run: |
     #   kubectl set image deployment/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}=${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{env.GCR_REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -n app
    
 
