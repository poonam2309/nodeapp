name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: linear-stock-388107
  GCR_HOSTNAME: us.gcr.io
  GCR_REGISTRY: app-engine-tmp
  GKE_CLUSTER: gke-cluster
  GKE_ZONE: us-central1-a
  IMAGE_NAME: app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build Docker Image
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true  
        
      - name: Log in to Docker Registry
        run: |
            echo ${{ secrets.GCP_SA_KEY }} 

      - name: Build Docker Image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{env.GCR_REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .


  deploy:
    name: Deploy to GKE
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker to use GCR
        run: |
          echo ${GOOGLE_APPLICATION_CREDENTIALS} | base64 --decode > /tmp/key.json
          gcloud auth activate-service-account --key-file=/tmp/key.json
          gcloud auth configure-docker

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}
          kubectl set image deployment/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}=${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
